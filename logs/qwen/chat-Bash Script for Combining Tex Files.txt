### USER
give me a bash code to find all .tex files in a directory and sub directories and copy all their code in a new tex file

### ASSISTANT
Certainly! Below is a bash script that will find all `.tex` files in a directory and its subdirectories, and then copy the contents of those files into a new `.tex` file.

```bash
#!/bin/bash

# Define the output file name
output_file="combined.tex"

# Clear the output file if it already exists
> "$output_file"

# Find all .tex files and append their content to the output file
find . -type f -name "*.tex" | while read -r file; do
    echo "Adding $file"
    cat "$file" >> "$output_file"
    echo "\n% --- End of $file ---\n" >> "$output_file"
done

echo "All .tex files have been combined into $output_file"
```

### Explanation:
1. `output_file="combined.tex"`: This sets the name of the output file where all the combined `.tex` content will be stored.
2. `> "$output_file"`: Clears the content of the output file if it already exists.
3. `find . -type f -name "*.tex"`: Finds all `.tex` files in the current directory (`.`) and its subdirectories.
4. `while read -r file; do ... done`: Loops over each found `.tex` file.
5. `cat "$file" >> "$output_file"`: Appends the content of each `.tex` file to the `combined.tex` file.
6. `echo "\n% --- End of $file ---\n"`: Adds a separator comment after each file's content for clarity.
7. `echo "All .tex files have been combined into $output_file"`: Prints a message indicating that the operation is complete.

### Usage:
1. Save this script to a file (e.g., `combine_tex_files.sh`).
2. Make the script executable by running:
   ```bash
   chmod +x combine_tex_files.sh
   ```
3. Run the script in the directory where you want to search for `.tex` files:
   ```bash
   ./combine_tex_files.sh
   ```

This will create a `combined.tex` file with the contents of all `.tex` files from the directory and its subdirectories.

### USER
I have a .txt file with all archives locations, and I need a new bash code to visit each line and copy the tex code from there, doing for all lines

### ASSISTANT
Certainly! If you have a `.txt` file that contains the paths to multiple `.tex` files (one path per line), you can use the following bash script to read each line of the `.txt` file, visit each path, and copy the content of the `.tex` files into a new combined `.tex` file.

Here's the updated bash script:

```bash
#!/bin/bash

# Define the input file containing the list of .tex file paths
input_file="file_paths.txt"

# Define the output file name where all the combined .tex code will be stored
output_file="combined.tex"

# Clear the output file if it already exists
> "$output_file"

# Read each line from the input file
while IFS= read -r tex_file; do
    # Check if the file exists
    if [[ -f "$tex_file" ]]; then
        echo "Adding $tex_file"
        # Append the content of the .tex file to the output file
        cat "$tex_file" >> "$output_file"
        # Add a separator comment after each file's content for clarity
        echo "\n% --- End of $tex_file ---\n" >> "$output_file"
    else
        echo "File not found: $tex_file"
    fi
done < "$input_file"

echo "All .tex files listed in $input_file have been combined into $output_file"
```

### Explanation:
1. `input_file="file_paths.txt"`: This is the file that contains the list of `.tex` file paths (one path per line).
2. `output_file="combined.tex"`: This is the output file where all the combined `.tex` content will be stored.
3. `> "$output_file"`: Clears the content of the output file if it already exists.
4. `while IFS= read -r tex_file; do ... done < "$input_file"`: Reads each line from the `file_paths.txt` file. Each line is treated as a path to a `.tex` file.
5. `if [[ -f "$tex_file" ]]; then`: Checks if the file exists at the given path.
6. `cat "$tex_file" >> "$output_file"`: Appends the content of the `.tex` file to the `combined.tex` file.
7. `echo "\n% --- End of $tex_file ---\n"`: Adds a separator comment after each file's content for clarity.
8. `echo "File not found: $tex_file"`: Prints an error message if a file listed in the `file_paths.txt` does not exist.
9. `echo "All .tex files listed in $input_file have been combined into $output_file"`: Prints a message indicating that the operation is complete.

### Usage:
1. Save this script to a file (e.g., `combine_tex_from_list.sh`).
2. Make the script executable by running:
   ```bash
   chmod +x combine_tex_from_list.sh
   ```
3. Ensure your `file_paths.txt` file contains the paths to the `.tex` files, one per line. For example:
   ```
   /path/to/file1.tex
   /path/to/subdir/file2.tex
   /another/path/file3.tex
   ```
4. Run the script:
   ```bash
   ./combine_tex_from_list.sh
   ```

This will create a `combined.tex` file with the contents of all `.tex` files listed in `file_paths.txt`.

### Notes:
- Make sure the paths in `file_paths.txt` are absolute or relative to the directory from which you run the script.
- If any file listed in `file_paths.txt` does not exist, the script will print a warning but continue processing the rest of the files.